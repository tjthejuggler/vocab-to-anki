-run the apos script

-make mp3 transcripts be saved to github

Make a script that automatically puts punctuation back it en pronunciation filenames, and make the re.sub updated to allow apostrophes to stay.
The script will need to ask for help on some words, like we're and it's - get a list of apostrophe engl words.
Remember to use the new re.sub in any other programs of scripts that need it

-be able to use .apkg file directly
-rename stuff in sources
-remove cluttery prints
-make an opt for showing prints
-make exporting an audio lesson show stats
-split mainaudio into different files
-put instructions in readme
	by default source.txt is used
	explain the difference of formatted and not
	the the args and opts
-figure out how big/how many chunks can go into a pydub audio file and make 
-figure out exactly what is not working
-make single word mp3s out of turkish101 chunks


-times and numbers should be written out from now on instea of using digits

make it possible to download the second language

-fix variable names

-break down the main loop

-test the new opposite local dict setup
	-if it works fine then use tool to make opposite dicts from current local dicts

-allow for extra fields to be input so i can do stuff like this chart
	https://www.tutormandarin.net/en/1000-most-common-chinese-words/
	-these extra fields can go into hint and be seperated with \n
	-eventually these fields could be possible question/answers

-make a combine_failed_words program

-find out how pretty printed jsons can be used
	

-we should have an es_en dict and and en_es dict because of the querer/quiero issue
	-this means undoing some of that complicated alphabetical switch thing
	-this can be jumpstarted by flipping current dictionaries with dictionary_formatter.py

-make everything get changed to lower case before being added to dictionaries, lists, mp3s, and when we look at these things

-we should have a translate option that is 'preserve phrases that keeps chunks of text together if it is between punctuation' so we can translate entire phrases

-make a confirmation of how many words will be downloaded/translated
	-it could quickly tell (this is a little complicated and based on settings)
		how many of the words we already have
		how many have previously failed
		how may it is going to attempt

-for now lets either make an unformated to formatted setup
	and
	formatted to cards setup
	we can combine them later
-make optional "hint" language when making cards
-make instructions for translation export


-clean up mainaudio.py to make it more readable

PRONUNCIATION PLAYER
-We could also make every word have a pronunciation with a button for each word. 
-If there are just two words we could make them be pronounced seperately with two recordings if they don't exist together as a single recording.

-We should automatically make lists of unpronounced words, words that forvo doesn't have pronunciations for so we can request them





run other turkish 101 stuff through here:
	single word vocab from 250 phrases(once completed)
	turkish filler words
	150 Most Common Phrases in Turkish(once completed)

do this for single words in turkish_conversation
	TurkishClass101 Word Power Audible (in turkish_vocab)

replace original txt lists with swapped versions
the swapper could have a smaller name and it could do smart swapping to put turkish words first(or whatever foreign words)




check to see if video has subtitles, if it does, then find the timestamp on the first instance of each word and make the url automatically have that timestamp built in

EVENTUALLY:
get pronunciations for common words in top MANY languages
write a scraper that finds out which language pairs are missing from anki shared decks
	use local dictionaries/translations to get the names of all popular languages in different languages
make decks for those pairs